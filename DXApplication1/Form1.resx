<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Form1.IconOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>