<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Form1.IconOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAD
        rwAAA68BGB6xfQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAkXSURBVHhe7Z15
        bBRVHMd3Z8ErYtQ/iFETFc9oNJ7RxHhFE+NFoSIICMLuUkXBWzGoEdREQoxn8IDEA4UtIKhQKFRqpUCp
        UujOolJbFFCOIpSrFNpSeL7f7itMZ367nZ2dnZ2d9/smn5B0X9/+9r3PzrzZeVt8rsuIjScFwrECJRz7
        MBBSlyshtZFziMPyBf+Qip2+gT/dLF4RxVSGR89RQtF3+QDu0Q9o3jH4R+bvP+cwSWAmEyp6KGH1FT5w
        LYaBzFdAgIIISdBt+Ls+EIyuRAcxn+kUgCRIkVHRS/hgbTIMnhfQCkASIAmr5/KB2mwYOK+gF4Ak0KSo
        pidf3VehA+cVMAHiEnzLJSi/VYyEnOEr/TfRQfMSyQQApD4SBGN9+AC1GgbMa6QSAJBVAj44Uw2D5UW6
        EwCQToKh1afxwfHOtX4qzAgAyLQm4Au/R9HB8iJmBQBkORIoodjX6GB5kXQEAGQ4EihBdT06WF4kXQEA
        T0swgSl8YNoMA+VVrAgAePZ0EKzrhQ6UV7EqAODJI8Hjam90oLxKJgIAnjsSkADp46kjAQlgDc9IQAJY
        xxMSkACZkfcSkACZk9cSkAD2kLcSkAD2kZcSkAD2kncSkAD2k1cSkADZIW8kIAGyR15IQAJkF9dLQAJk
        H1dLQAI4g2slIAGcw5USkADO4joJSADncZUEkgngH1KOT4rTxCVww84i2QQYVoVPSC5whQSynQKAAfPx
        CckFOZdARgGCtUwZuBCfkFyQUwlkFKCTkWuYf/gqDj8t5JxfVooZcTgyC+AiAiG1UsyIwyEBXAEJIDkk
        gOSQAJJDAkgOCSA5JIDkkACSQwJIDgkgOSSA5JAAkkMCSA4JIDnpCdBvxnW+vsVjfAWRcRlTOOfN+D45
        wsgjy5gysgadMLsxLYBSEPnAXxA5athVQmSHfsVchEp00uzEnAD9Zg5EiySyTHHWjwSmBFD6RmbiBRJZ
        Z+jP6MTZhSkBeCGVhsIIR4AvlGATZxckgMshASTHcwIMf28VW7d5Lyur3c4uemwB2sYqZwyZyx6b8iv7
        vnoLi23awzZsb2ZVdTvZlEX17M7XfkJ/JxWXP7mQfVzawNSNe9hfjc0o8BzlaiN7auoadvJDs9F+MsFT
        Apwz8nt2uOMo68yiNdvQdumi9Iuwp6etYU3NbaJnPCv+2MmuHLsI7UMPTKi2VjOp27KfXfy4vVJ7SoDb
        xi8VQ5XIxh0H0Hbp0KN/Mfu6YqPosfs0HzrM7p34M9pXJ4Mmr2RH05v7Y2nY1sx6DZqD9msFTwlw+/hy
        MUyJbPovcwHen/+n6M18DnAJrnlmMdrfCYWz2JZdB0VLa3n1GxXt2wokQApuebnrEQXS3nGEfb70b/bg
        pOXsLn7ef/LTGlb7927x6PGs/Ws3C8Cnbbo+9TVCJhb/xm56sYxd/9wSA3e/XsGq/9wlWiYC6w99v1Yh
        AVKwlC++tNnX0s5uHmf8QwxwmviopF60Op7Ct5cb2oY/+kU8msiqul2GNnqufXaxaJ3IwbYOtJ0VSIAk
        9B42j3Uc6XqifuTdKrQtAO92WARqE6ncbGg3dmqNeDSRktVbDW30wGljt2YBClc5WDsrkABJuO+NZaKX
        RBr3HEIP6VpgcacNtgi1IgBwxyvl8UtOuCS8+ulStI0VSIAkhHSHajgdYO20XPZEiWidSGv7EUMbqwJk
        CxIgCWM+S3+izgv/IFofj/6oQQIg4YWQADmCBEgCCWAPJEAaApw++Fv2SWkD+7W+idVswJlb9S+7dHRJ
        lz4zgQRIQi4E+LDE3KeOIIK2z0wgAZKQCwEW1mwVP00duI8AN6i0/VqFBEhCLgTo+1Zl/KNmMyEBELyw
        CLxg1Pz4fYaBk1ccA+436EMCINgpwBOfrBa9JGJmbwFMnjbYobo7ATDOD3ftF0ICINgpALzztIG7e1g7
        LXCjSJud+1oNbUgAJLwQ1wkAt2K1OcLfzn2KUv8t3snz1ovWiWB3+kgAJLwQ1wkAA7y1qevGjcVrt7Ge
        hV3P6Z3ALVu4TasNtnFDfz4vNXFqubBogWidCF0FJMFOAQCYQH1+jDbGN3N2tgEhYCOq9nYtpKW1I75H
        UdsfoD+17Nrfys4eYWyn5fnP14rWicCdSaydFTwtwCH+joQJMwt8ynbjC2XH+jt10Jz4zlwssDdvdUMT
        29vSLn7SNa/NiHWprROYbDidaAMbTSrW7UBrgrWHPrNX/IP2bQVPC2Al8I48RbP9Gnb5JpvkZPmu+l/D
        5Z+W6WlsMtUH5NFKmimeEkC/cLMaWHRp+71izEJWv3W/eDR14DsCsINH+/t64PsFsKvHSl7+Kor2aRVP
        CQDnY9g1k0lgUYYtsOBLGS9+URv/ooY+8Okd/B62XzAZcONnWtkG098N2PxfS3zHEdZXJnhKAOCkAbPi
        +/K1n6SZBXbgJlvla7lkdEn8OQZMWhHfOQzvaKydGc4cOpfdk6JeeI4bnl+S8pSSCZ4TgEgPEkBy3CLA
        En1hhEMMLkcnzi5MCaAURCahxRHZZ9hKdOLswpQAvv7Te/NidhiKI7LLgB/4JEUNk2Yn5gSAFM44T+kb
        mcUL224olLCXwrlMebgs8f8MIpNmJ+YFsDv0hyJdAQkgOSSA5JAAkkMCSA4JIDkkgOSQAJJDAkgOCSA5
        JIDkkACSQwJIDgkgOSSA5JAAkkMCSA4JIDm5EyBY1wsriHAWf0gtFTPicCYwhRfQpi+IcJigOlPMiPPh
        BfxhKIhwlrA6QUyH8+EFTDcURDgKXwM8IKbD+QSC6nCsKMIx2nxDq08T05GD8CfnRbToiiIcwh+OzRMz
        kbsowehnWHFE9ukRUu8U05DDhNULeDGt+uKI7JK7638kSig2ESuSyBrtvvC6q8TwuyAPzQ74Q+oipFAi
        G4TV0WLkXZTRsTN4cfWGYgm7mSJG3IUpWnehElTXI0UT9vClr6impxhtlyZY14ufDuYjxRPW6eDrrHFi
        hPMgfE3AC36JF35A90KIdOFHVF+49nYxsnmWEb+fxV/AO/yFNBleGNEdvwVC0aD7D/lmMrbhxMCo6P38
        Rb3Pr1+X8X+385XsQc2LlZ29nA3+oLqAv2HG+0aq14qRsxCf738vrlu//jLDZgAAAABJRU5ErkJggg==
</value>
  </data>
</root>